Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.

The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.

Note:

Your returned answers (both index1 and index2) are not zero-based.
You may assume that each input would have exactly one solution and you may not use the same element twice.
 

Example 1:

Input: numbers = [2,7,11,15], target = 9
Output: [1,2]
Explanation: The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.
Example 2:

Input: numbers = [2,3,4], target = 6
Output: [1,3]
Example 3:

Input: numbers = [-1,0], target = -1
Output: [1,2]
 

Constraints:

2 <= nums.length <= 3 * 104
-1000 <= nums[i] <= 1000
nums is sorted in increasing order.
-1000 <= target <= 1000
######

class Solution(object):
    def twoSum(self, numbers, target):
        """
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        TWO PTR METHOD
        Notes: For 2 ptr method the array must be sorted as here.
        Logic: set 2 ptrs lo and hi from start and end of array and check if they add up to target.if sum<tgt increment lo, if sum>tgt decrement hi
        TC: O(N) 1 pass through array
        """
        lo=0
        hi=len(numbers)-1
        for i in range(len(numbers)):
            sum=numbers[lo]+numbers[hi]
            if sum<target:
                lo+=1
            elif sum>target:
                hi-=1
            else:
                return [lo+1,hi+1]
            
 #####           
            
Do we need to consider if numbers[low] + numbers[high]numbers[low]+numbers[high] overflows? The answer is no. Even if adding two elements in the array may overflow, because there is exactly one solution, we will reach the solution first.

Complexity analysis

Time complexity : O(n)O(n). Each of the nn elements is visited at most once, thus the time complexity is O(n)O(n).

Space complexity : O(1)O(1). We only use two indexes, the space complexity is O(1)O(1).
