'''
Write a function that reverses a string. The input string is given as an array of characters char[].

Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.

You may assume all the characters consist of printable ascii characters.

 

Example 1:

Input: ["h","e","l","l","o"]
Output: ["o","l","l","e","h"]
Example 2:

Input: ["H","a","n","n","a","h"]
Output: ["h","a","n","n","a","H"]
'''
'''
Depricated
class Solution(object):
    def reverseString(self, s):
        """
        :type s: List[str]
        :rtype: None Do not return anything, modify s in-place instead.
        """
        total=len(s)-1  #to hold index of last char
        for i in range(len(s)/2):
            tmp=s[i]     #swap 1st and last char and so on
            s[i]=s[total-i]
            s[total-i]=tmp
        return s
'''

class Solution:
    def reverseString(self, s: List[str]) -> None:
        """
        Do not return anything, modify s in-place instead.
        """
        left=0
        right=len(s)-1
        while left<right: #till midway index
            s[left],s[right]=s[right],s[left] #swap
            left+=1
            right-=1
            
            
            #TC:0(N) to swap N/2 elem
            #SC: 0(1)
