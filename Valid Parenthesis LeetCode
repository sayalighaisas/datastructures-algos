'''
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true

'''



class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """ 
        # push into stack for each opening bracket
        # for closing bracket pop tos and check if matches corresp.val
        
        stack=[]
        
        if s=="":
            return True
        
        if len(s)%2!=0:
            return False
        
        for eachchar in s:
            if eachchar=="(" or eachchar=="{" or eachchar=="[":
                stack.append(eachchar)
                
            else:
                if len(stack)==0:
                    return False
                
                if eachchar==")":
                    top=stack.pop()
                    if top!="(":
                        return False
                    
                if eachchar=="]":
                    top=stack.pop()
                    if top!="[":
                        return False
                
                if eachchar=="}":
                    top=stack.pop()
                    if top!="{":
                        return False
                    
        if len(stack)!=0:
            return False
        else:
            return True
        
        
        
