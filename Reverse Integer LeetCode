'''
Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.
'''

class Solution(object):
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """
        
        if x<0:
            x=-x
            negative_no=True
        else:
            negative_no=False
        reversed_int=0
        remainder=0
        while x>0:
            remainder=x%10
            x=x/10
            reversed_int=reversed_int*10+remainder
        if reversed_int>=-2**31 and reversed_int<=2**31-1:
            if negative_no:
                reversed_int=-reversed_int
            return reversed_int
        else:
            return 0
